<launch>
    <!-- Args for launchfile -->
    <arg name="package_name" default="prototype" />
    <arg name="hostname" default="129.69.102.242" />
    <arg name="ip" default="129.69.102.180"/>
    <arg name="path" value="$(eval find(arg('package_name')))" />
    <arg name="map_file" default="$(arg path)/maps/FinalGridMapv2cleaned.yaml"/>

    <include file="$(find robotino_node)/launch/robotino_node.launch">
        <arg name="hostname" value="$(arg hostname)"/>
    </include> 

    <!-- Global parameters which can be used inside nodes -->
    <param name="robot_description" textfile="$(find robotino_description)/robotino.urdf" />
    <param name="map_path" value="$(arg path)/maps/FinalGridMapv2cleaned.png"/>
    <param name="package_path" value="(arg path)"/>
    
    <!-- Navigation -->
    <node pkg="map_server" type="map_server" args="$(arg map_file)" respawn="true" name="map"  output="log"/>
    <node pkg="$(arg package_name)" name="path_planner"  type="path_planner_node.py" output="screen"  required="true">
        <param name="map_ref" value="$(arg path)/maps/FinalGridMapv2cleaned.png"/>
    </node>
    <node pkg="$(arg package_name)" name="strategy_planner" type="strategy_planner_node.py" output="screen" required="true" />
    <!-- <node pkg="$(arg package_name)" name="fleetias_client" type="fleetias_client_node.py" output="screen">
        <param name="ip" value="$(arg ip)"/>
    </node> -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="log">
        <!-- <remap from="cmd_vel" to="/my_cmd_vel" />  -->
        <rosparam file="$(arg path)/cfg/costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(arg path)/cfg/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(arg path)/cfg/local_costmap_params.yaml" command="load" />
        <rosparam file="$(arg path)/cfg/global_costmap_params.yaml" command="load" />
        <rosparam file="$(arg path)/cfg/dwa_local_planner_params.yaml" command="load" />
        <rosparam file="$(arg path)/cfg/move_base_params.yaml" command="load" />
    </node>

    <!-- Situational awarness -->
    <node pkg="$(arg package_name)" name="localization" type="localization_node.py" output="screen" required ="true">
        <param name="weights_path" value="$(arg path)/src/yolov7/weights/statedict_ws_tiny5.pt"/>
    </node>
    <node pkg="$(arg package_name)" name="object_detection" type="object_detection_node.py" output="screen"  required="true" >
        <!-- <param name="weights_path" value ="$(arg path)/src/yolov7/weights/statedict_tiny10_hocker.pt"/> -->
        <param name="weights_path" value ="$(arg path)/src/yolov7/weights/statedict_tiny_robotino.pt"/>
        <param name="path_error_dist" value="$(arg path)/logs/error_dist_csvs/error_dist_detec_22_12.csv"/>
        <param name="path_error_dist_doorclosed" value="$(arg path)/logs/error_dist_csvs/error_dist_detec_22_12_rot_door_closed.csv" />
    </node>
    <node pkg="$(arg package_name)" name="workstation_mapper"  type="workstation_mapper_node.py" output="screen" >
        <param name="json_path" value="$(arg path)/maps/markers.json"/>
    </node>

    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <remap from="scan" to="/scan"/>
        <remap from="amcl_pose" to="/amcl_pose_source"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="odom_model_type" value="omni-corrected"/>
        <param name="base_frame_id" value="base_link"/>
        <param name="update_min_d" value="0.01"/>   
        <param name="update_min_a" value="0.05"/>  
        <param name="initial_pose_x" value ="-3.2"/>
        <param name="initial_pose_y" value ="1.2"/>
        <param name="initial_pose_a" value="-0.23"/>
    </node>
    
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg path)/cfg/rvizConfigNew.rviz" respawn="true"/>
</launch>