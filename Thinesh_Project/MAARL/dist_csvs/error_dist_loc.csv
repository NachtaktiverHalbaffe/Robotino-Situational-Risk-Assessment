tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.30409),tensor(6.88262),tensor(-6.40657),"tensor(7.63463, dtype=torch.float64)"
tensor(3.38863),tensor(7.83627),tensor(-6.41827),"tensor(8.53756, dtype=torch.float64)"
tensor(3.13443),tensor(8.69431),tensor(-6.42879),"tensor(9.24206, dtype=torch.float64)"
tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.38863),tensor(7.83627),tensor(-6.41827),"tensor(8.53756, dtype=torch.float64)"
tensor(3.52257),tensor(6.11292),tensor(-6.39602),"tensor(7.05523, dtype=torch.float64)"
tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.52257),tensor(6.11292),tensor(-6.39602),"tensor(7.05523, dtype=torch.float64)"
tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.38863),tensor(7.83627),tensor(-6.41827),"tensor(8.53756, dtype=torch.float64)"
tensor(3.30409),tensor(6.88262),tensor(-6.40657),"tensor(7.63463, dtype=torch.float64)"
tensor(3.49446),tensor(9.86938),tensor(-6.44314),"tensor(10.46977, dtype=torch.float64)"
tensor(3.62389),tensor(7.04237),tensor(-6.40740),"tensor(7.92007, dtype=torch.float64)"
tensor(3.52257),tensor(6.11292),tensor(-6.39602),"tensor(7.05523, dtype=torch.float64)"
tensor(2.57698),tensor(5.50090),tensor(-6.39641),"tensor(6.07460, dtype=torch.float64)"
tensor(2.58063),tensor(4.60581),tensor(-6.34495),"tensor(5.27950, dtype=torch.float64)"
tensor(2.40846),tensor(2.21130),tensor(-6.32190),"tensor(3.26964, dtype=torch.float64)"
tensor(1.91469),tensor(4.49938),tensor(-6.40691),"tensor(4.88983, dtype=torch.float64)"
tensor(-31.93224),tensor(21.99744),tensor(-6.79800),"tensor(38.77570, dtype=torch.float64)"
tensor(2.05225),tensor(2.47343),tensor(-6.37117),"tensor(3.21397, dtype=torch.float64)"
tensor(-0.55083),tensor(3.49657),tensor(-6.41482),"tensor(3.53969, dtype=torch.float64)"
tensor(2.77020),tensor(1.83685),tensor(-6.35518),"tensor(3.32386, dtype=torch.float64)"
tensor(1.62427),tensor(2.45763),tensor(-6.36099),"tensor(2.94588, dtype=torch.float64)"
tensor(2.18393),tensor(3.46301),tensor(-6.32744),"tensor(4.09414, dtype=torch.float64)"
tensor(0.04364),tensor(4.68844),tensor(-6.37882),"tensor(4.68864, dtype=torch.float64)"
tensor(1.10236),tensor(3.62368),tensor(-6.35751),"tensor(3.78764, dtype=torch.float64)"
tensor(2.24004),tensor(6.78506),tensor(-6.21682),"tensor(7.14527, dtype=torch.float64)"
tensor(2.77292),tensor(4.39326),tensor(-6.19132),"tensor(5.19517, dtype=torch.float64)"
tensor(1.50078),tensor(5.55307),tensor(-6.27167),"tensor(5.75230, dtype=torch.float64)"
tensor(1.59163),tensor(5.21250),tensor(-6.26844),"tensor(5.45009, dtype=torch.float64)"
tensor(0.61749),tensor(4.99070),tensor(-6.26863),"tensor(5.02876, dtype=torch.float64)"
tensor(1.33551),tensor(4.11564),tensor(-6.31207),"tensor(4.32690, dtype=torch.float64)"
tensor(1.91893),tensor(3.60397),tensor(-6.29667),"tensor(4.08300, dtype=torch.float64)"
tensor(1.86500),tensor(2.69258),tensor(-0.02342),"tensor(3.27539, dtype=torch.float64)"
tensor(0.75979),tensor(2.01569),tensor(-0.00901),"tensor(2.15414, dtype=torch.float64)"
tensor(1.15197),tensor(3.56611),tensor(0.02936),"tensor(3.74755, dtype=torch.float64)"
tensor(1.10371),tensor(3.80338),tensor(0.02124),"tensor(3.96029, dtype=torch.float64)"
tensor(0.97566),tensor(3.88758),tensor(0.01959),"tensor(4.00814, dtype=torch.float64)"
tensor(1.10371),tensor(3.80338),tensor(0.02124),"tensor(3.96029, dtype=torch.float64)"
tensor(0.96714),tensor(3.67470),tensor(0.02404),"tensor(3.79984, dtype=torch.float64)"
tensor(0.96714),tensor(3.67470),tensor(0.02404),"tensor(3.79984, dtype=torch.float64)"
tensor(1.11170),tensor(4.01774),tensor(0.01677),"tensor(4.16871, dtype=torch.float64)"
tensor(1.24071),tensor(3.93391),tensor(0.01841),"tensor(4.12493, dtype=torch.float64)"
tensor(1.24814),tensor(4.14978),tensor(0.01392),"tensor(4.33342, dtype=torch.float64)"
tensor(1.11170),tensor(4.01774),tensor(0.01677),"tensor(4.16871, dtype=torch.float64)"
tensor(1.10371),tensor(3.80338),tensor(0.02124),"tensor(3.96029, dtype=torch.float64)"
tensor(1.10371),tensor(3.80338),tensor(0.02124),"tensor(3.96029, dtype=torch.float64)"
tensor(1.11170),tensor(4.01774),tensor(0.01677),"tensor(4.16871, dtype=torch.float64)"
tensor(1.24814),tensor(4.14978),tensor(0.01392),"tensor(4.33342, dtype=torch.float64)"
tensor(1.71516),tensor(4.39059),tensor(0.03317),"tensor(4.71371, dtype=torch.float64)"
tensor(-0.54410),tensor(-2.92131),tensor(0.18329),"tensor(2.97155, dtype=torch.float64)"
tensor(1.62877),tensor(-1.85575),tensor(0.14930),"tensor(2.46915, dtype=torch.float64)"
tensor(1.67264),tensor(-2.16975),tensor(0.15126),"tensor(2.73962, dtype=torch.float64)"
tensor(0.73593),tensor(-2.89877),tensor(0.16575),"tensor(2.99073, dtype=torch.float64)"
tensor(0.73593),tensor(-2.89877),tensor(0.16575),"tensor(2.99073, dtype=torch.float64)"
tensor(11.94494),tensor(21.73787),tensor(-0.16697),"tensor(24.80356, dtype=torch.float64)"
tensor(9.71774),tensor(1.31029),tensor(0.00298),"tensor(9.80567, dtype=torch.float64)"
tensor(12.19764),tensor(5.09450),tensor(-0.09132),"tensor(13.21879, dtype=torch.float64)"
tensor(11.10829),tensor(3.47826),tensor(-0.05278),"tensor(11.64012, dtype=torch.float64)"
tensor(7.13759),tensor(1.23778),tensor(-0.00950),"tensor(7.24412, dtype=torch.float64)"
tensor(5.19878),tensor(0.84776),tensor(0.00458),"tensor(5.26745, dtype=torch.float64)"
tensor(1.05021),tensor(0.81304),tensor(0.02751),"tensor(1.32815, dtype=torch.float64)"
tensor(1.19962),tensor(1.17509),tensor(0.02369),"tensor(1.67926, dtype=torch.float64)"
tensor(2.98682),tensor(1.12000),tensor(0.00142),"tensor(3.18990, dtype=torch.float64)"
tensor(4.59727),tensor(0.70204),tensor(-0.03082),"tensor(4.65056, dtype=torch.float64)"
tensor(5.85875),tensor(1.05052),tensor(-0.05190),"tensor(5.95219, dtype=torch.float64)"
tensor(5.29927),tensor(0.80210),tensor(-0.04194),"tensor(5.35963, dtype=torch.float64)"
tensor(6.42828),tensor(1.31032),tensor(-0.06209),"tensor(6.56047, dtype=torch.float64)"
tensor(4.97928),tensor(1.12092),tensor(-0.05063),"tensor(5.10389, dtype=torch.float64)"
tensor(3.02396),tensor(0.55021),tensor(-0.01806),"tensor(3.07361, dtype=torch.float64)"
tensor(5.23373),tensor(-0.12189),tensor(-0.09325),"tensor(5.23515, dtype=torch.float64)"
tensor(-3.48578),tensor(-5.09068),tensor(0.01029),"tensor(6.16974, dtype=torch.float64)"
tensor(-5.93711),tensor(-6.99069),tensor(0.01471),"tensor(9.17164, dtype=torch.float64)"
tensor(2.42789),tensor(5.37275),tensor(-0.15207),"tensor(5.89586, dtype=torch.float64)"
tensor(2.53616),tensor(6.01263),tensor(-0.16511),"tensor(6.52562, dtype=torch.float64)"
tensor(2.37102),tensor(6.02870),tensor(-0.16367),"tensor(6.47819, dtype=torch.float64)"
tensor(2.03632),tensor(5.48934),tensor(-0.15330),"tensor(5.85487, dtype=torch.float64)"
tensor(3.40441),tensor(8.46683),tensor(-0.20500),"tensor(9.12563, dtype=torch.float64)"
tensor(0.27847),tensor(-4.64023),tensor(0.11489),"tensor(4.64858, dtype=torch.float64)"
tensor(0.27940),tensor(-3.00321),tensor(0.13749),"tensor(3.01618, dtype=torch.float64)"
tensor(-0.20727),tensor(-2.97983),tensor(0.14399),"tensor(2.98703, dtype=torch.float64)"
tensor(0.20523),tensor(-2.82055),tensor(0.13633),"tensor(2.82801, dtype=torch.float64)"
tensor(-0.18018),tensor(-3.18949),tensor(0.14483),"tensor(3.19458, dtype=torch.float64)"
tensor(-1.49603),tensor(-4.46037),tensor(0.13371),"tensor(4.70457, dtype=torch.float64)"
tensor(-8.46157),tensor(-8.82378),tensor(0.11458),"tensor(12.22527, dtype=torch.float64)"
tensor(4.58143),tensor(16.88927),tensor(-0.34220),"tensor(17.49962, dtype=torch.float64)"
tensor(1.78794),tensor(5.55193),tensor(-0.14290),"tensor(5.83273, dtype=torch.float64)"
tensor(1.65929),tensor(7.60526),tensor(-0.18618),"tensor(7.78417, dtype=torch.float64)"
tensor(1.32220),tensor(6.19805),tensor(-0.16045),"tensor(6.33751, dtype=torch.float64)"
tensor(1.51257),tensor(5.62527),tensor(-0.18336),"tensor(5.82508, dtype=torch.float64)"
tensor(0.27437),tensor(0.94423),tensor(-0.16653),"tensor(0.98328, dtype=torch.float64)"
tensor(0.91438),tensor(1.85304),tensor(-6.37297),"tensor(2.06636, dtype=torch.float64)"
tensor(0.93898),tensor(2.55691),tensor(-6.36830),"tensor(2.72387, dtype=torch.float64)"
tensor(1.14654),tensor(1.58950),tensor(-6.33921),"tensor(1.95986, dtype=torch.float64)"
tensor(1.29568),tensor(0.77236),tensor(-6.32667),"tensor(1.50842, dtype=torch.float64)"
tensor(1.25822),tensor(0.90366),tensor(-6.32245),"tensor(1.54910, dtype=torch.float64)"
tensor(0.63303),tensor(0.53068),tensor(-6.32544),"tensor(0.82604, dtype=torch.float64)"
tensor(1.93572),tensor(-1.80767),tensor(-6.30298),"tensor(2.64853, dtype=torch.float64)"
-4.268208580780467,4.101437740182789,-6.4583919370875815,5.91940841855364
-4.419943228239944,4.60968013102007,-6.456567713880918,6.3863173309181365
tensor(-1.67064),tensor(3.60319),tensor(-6.41033),"tensor(3.97165, dtype=torch.float64)"
tensor(-0.28821),tensor(3.17715),tensor(-6.38627),"tensor(3.19019, dtype=torch.float64)"
tensor(-3.45811),tensor(4.12497),tensor(-6.44021),"tensor(5.38274, dtype=torch.float64)"
tensor(-6.01540),tensor(4.32198),tensor(-6.46778),"tensor(7.40706, dtype=torch.float64)"
tensor(18.64699),tensor(-3.48124),tensor(-6.08067),"tensor(18.96916, dtype=torch.float64)"
tensor(24.55815),tensor(-6.34030),tensor(-6.08545),"tensor(25.36340, dtype=torch.float64)"
tensor(21.35223),tensor(-3.43232),tensor(-6.12479),"tensor(21.62634, dtype=torch.float64)"
tensor(21.34705),tensor(-3.39071),tensor(-6.12626),"tensor(21.61466, dtype=torch.float64)"
tensor(21.21212),tensor(-3.56340),tensor(-6.12629),"tensor(21.50934, dtype=torch.float64)"
tensor(21.35223),tensor(-3.43232),tensor(-6.12479),"tensor(21.62634, dtype=torch.float64)"
tensor(21.90411),tensor(-3.82639),tensor(-6.11500),"tensor(22.23581, dtype=torch.float64)"
tensor(20.11504),tensor(-3.92835),tensor(-6.05458),"tensor(20.49505, dtype=torch.float64)"
tensor(8.29021),tensor(-4.14774),tensor(-6.08621),"tensor(9.26991, dtype=torch.float64)"
-11.680085984640755,7.2124665726003485,-6.488337485447493,13.727493677633904
-11.597755042764348,6.93389907018036,-6.488337485447493,13.512471215414815
-11.597755042764348,6.93389907018036,-6.488337485447493,13.512471215414815
-11.597755042764348,6.93389907018036,-6.488337485447493,13.512471215414815
-11.597755042764348,6.93389907018036,-6.488337485447493,13.512471215414815
tensor(4.90862),tensor(-6.79082),tensor(-6.01039),"tensor(8.37912, dtype=torch.float64)"
tensor(2.66355),tensor(-1.41065),tensor(-6.21244),"tensor(3.01404, dtype=torch.float64)"
tensor(4.28910),tensor(-4.14164),tensor(-6.17731),"tensor(5.96235, dtype=torch.float64)"
tensor(4.46944),tensor(-4.88486),tensor(-6.17975),"tensor(6.62101, dtype=torch.float64)"
tensor(1.28922),tensor(-7.01385),tensor(-5.93783),"tensor(7.13136, dtype=torch.float64)"
tensor(3.21201),tensor(-4.07643),tensor(0.08479),"tensor(5.18982, dtype=torch.float64)"
tensor(2.68419),tensor(-2.08604),tensor(0.03559),"tensor(3.39948, dtype=torch.float64)"
tensor(1.59757),tensor(-4.78535),tensor(0.05320),"tensor(5.04498, dtype=torch.float64)"
tensor(1.71566),tensor(-4.91272),tensor(0.05058),"tensor(5.20368, dtype=torch.float64)"
tensor(1.95100),tensor(-4.50170),tensor(0.04305),"tensor(4.90630, dtype=torch.float64)"
tensor(2.44296),tensor(-4.30080),tensor(0.03558),"tensor(4.94620, dtype=torch.float64)"
tensor(2.37557),tensor(-3.35317),tensor(0.02458),"tensor(4.10939, dtype=torch.float64)"
tensor(2.57439),tensor(-3.46432),tensor(0.03508),"tensor(4.31613, dtype=torch.float64)"
tensor(1.19693),tensor(-4.21255),tensor(0.07204),"tensor(4.37930, dtype=torch.float64)"
-7.791704167784218,-3.079787049503338,0.23584082521519334,8.378289927458612
tensor(2.45847),tensor(-1.89640),tensor(0.03483),"tensor(3.10490, dtype=torch.float64)"
tensor(2.25463),tensor(-2.04678),tensor(0.03945),"tensor(3.04510, dtype=torch.float64)"
tensor(2.36329),tensor(-2.19738),tensor(0.03946),"tensor(3.22701, dtype=torch.float64)"
tensor(2.25463),tensor(-2.04678),tensor(0.03945),"tensor(3.04510, dtype=torch.float64)"
tensor(2.05418),tensor(-2.65321),tensor(0.04884),"tensor(3.35546, dtype=torch.float64)"
tensor(2.45847),tensor(-1.89640),tensor(0.03483),"tensor(3.10490, dtype=torch.float64)"
tensor(-1.53850),tensor(-2.35085),tensor(0.10189),"tensor(2.80953, dtype=torch.float64)"
tensor(3.07317),tensor(-1.55099),tensor(-0.00070),"tensor(3.44237, dtype=torch.float64)"
tensor(2.67490),tensor(-2.30467),tensor(0.00309),"tensor(3.53081, dtype=torch.float64)"
tensor(3.13470),tensor(-1.39020),tensor(-0.01227),"tensor(3.42914, dtype=torch.float64)"
tensor(-0.59649),tensor(-7.49014),tensor(-0.06654),"tensor(7.51386, dtype=torch.float64)"
tensor(1.05692),tensor(-5.05617),tensor(0.01220),"tensor(5.16545, dtype=torch.float64)"
tensor(-0.28955),tensor(-7.55051),tensor(-0.00682),"tensor(7.55606, dtype=torch.float64)"
tensor(-0.50098),tensor(-6.57361),tensor(-0.01508),"tensor(6.59267, dtype=torch.float64)"
tensor(-3.91285),tensor(-8.68099),tensor(0.04762),"tensor(9.52208, dtype=torch.float64)"
tensor(-4.32606),tensor(-9.91361),tensor(0.07043),"tensor(10.81640, dtype=torch.float64)"
tensor(-3.52672),tensor(-9.36076),tensor(0.05859),"tensor(10.00308, dtype=torch.float64)"
tensor(-4.32606),tensor(-9.91361),tensor(0.07043),"tensor(10.81640, dtype=torch.float64)"
tensor(-2.98237),tensor(-4.31264),tensor(-0.06023),"tensor(5.24342, dtype=torch.float64)"
tensor(0.79681),tensor(0.65445),tensor(-0.13853),"tensor(1.03112, dtype=torch.float64)"
tensor(-0.03438),tensor(0.05067),tensor(-6.34264),"tensor(0.06123, dtype=torch.float64)"
tensor(0.29590),tensor(3.20352),tensor(-6.42163),"tensor(3.21716, dtype=torch.float64)"
tensor(0.71716),tensor(1.73495),tensor(-6.39533),"tensor(1.87733, dtype=torch.float64)"
tensor(0.62526),tensor(3.41228),tensor(-6.42373),"tensor(3.46910, dtype=torch.float64)"
tensor(1.79729),tensor(0.36791),tensor(-6.32527),"tensor(1.83456, dtype=torch.float64)"
tensor(-0.27363),tensor(6.24057),tensor(-6.42381),"tensor(6.24657, dtype=torch.float64)"
tensor(2.86526),tensor(-7.15303),tensor(-6.17708),"tensor(7.70555, dtype=torch.float64)"
tensor(-1.62022),tensor(4.60316),tensor(-6.43041),"tensor(4.87998, dtype=torch.float64)"
tensor(0.85857),tensor(3.27596),tensor(-6.36913),"tensor(3.38659, dtype=torch.float64)"
tensor(0.26208),tensor(3.56917),tensor(-6.38030),"tensor(3.57878, dtype=torch.float64)"
tensor(0.25925),tensor(3.80888),tensor(-6.38208),"tensor(3.81770, dtype=torch.float64)"
tensor(2.30323),tensor(1.74957),tensor(-6.42881),"tensor(2.89238, dtype=torch.float64)"
tensor(15.90347),tensor(-5.44328),tensor(-6.15401),"tensor(16.80921, dtype=torch.float64)"
tensor(19.49377),tensor(-7.07955),tensor(-6.17014),"tensor(20.73950, dtype=torch.float64)"
tensor(17.96680),tensor(-5.31230),tensor(-6.09204),"tensor(18.73570, dtype=torch.float64)"
tensor(16.63618),tensor(-4.39119),tensor(-6.11760),"tensor(17.20596, dtype=torch.float64)"
tensor(17.96680),tensor(-5.31230),tensor(-6.09204),"tensor(18.73570, dtype=torch.float64)"
tensor(19.68209),tensor(-6.15528),tensor(-6.02330),"tensor(20.62213, dtype=torch.float64)"
tensor(17.21267),tensor(-3.92139),tensor(-6.00993),"tensor(17.65371, dtype=torch.float64)"
2.654709787527551,2.5335981734369994,-6.26378172564044,3.6696871474878994
4.6301045304195725,-12.136842894127469,-5.994932006639974,12.990027844440684
tensor(-2.98279),tensor(4.99039),tensor(-6.26341),"tensor(5.81386, dtype=torch.float64)"
tensor(0.38715),tensor(1.22072),tensor(-6.35559),"tensor(1.28064, dtype=torch.float64)"
tensor(2.58794),tensor(-3.06147),tensor(-6.26064),"tensor(4.00874, dtype=torch.float64)"
tensor(3.06383),tensor(-5.20696),tensor(-6.23721),"tensor(6.04148, dtype=torch.float64)"
tensor(3.10806),tensor(-5.94352),tensor(-6.22292),"tensor(6.70712, dtype=torch.float64)"
tensor(3.10377),tensor(-4.67069),tensor(-6.25188),"tensor(5.60792, dtype=torch.float64)"
tensor(2.96693),tensor(-4.47025),tensor(-6.23400),"tensor(5.36524, dtype=torch.float64)"
tensor(2.72219),tensor(-9.55820),tensor(-6.12550),"tensor(9.93828, dtype=torch.float64)"
tensor(2.51394),tensor(-4.41163),tensor(-6.19993),"tensor(5.07763, dtype=torch.float64)"
tensor(2.64343),tensor(-5.64181),tensor(-6.17395),"tensor(6.23039, dtype=torch.float64)"
tensor(2.53378),tensor(-4.44989),tensor(-6.20014),"tensor(5.12070, dtype=torch.float64)"
tensor(2.77481),tensor(-5.96409),tensor(-6.17428),"tensor(6.57799, dtype=torch.float64)"
tensor(-4.38728),tensor(3.03236),tensor(-6.58219),"tensor(5.33323, dtype=torch.float64)"
tensor(6.00919),tensor(-1.67683),tensor(-6.28499),"tensor(6.23875, dtype=torch.float64)"
tensor(10.52686),tensor(-6.29431),tensor(-6.23556),"tensor(12.26511, dtype=torch.float64)"
tensor(10.52686),tensor(-6.29431),tensor(-6.23556),"tensor(12.26511, dtype=torch.float64)"
tensor(12.01495),tensor(-8.49487),tensor(-6.18297),"tensor(14.71469, dtype=torch.float64)"
tensor(9.58176),tensor(-5.11826),tensor(-6.26542),"tensor(10.86309, dtype=torch.float64)"
tensor(9.58176),tensor(-5.11826),tensor(-6.26542),"tensor(10.86309, dtype=torch.float64)"
tensor(11.39803),tensor(-8.33566),tensor(-6.09420),"tensor(14.12085, dtype=torch.float64)"
tensor(8.26945),tensor(-4.40475),tensor(-6.16595),"tensor(9.36939, dtype=torch.float64)"
tensor(10.44842),tensor(-8.15348),tensor(-6.07241),"tensor(13.25325, dtype=torch.float64)"
tensor(8.35127),tensor(-4.53189),tensor(-6.16023),"tensor(9.50167, dtype=torch.float64)"
tensor(7.52445),tensor(-3.71609),tensor(-6.18441),"tensor(8.39206, dtype=torch.float64)"
tensor(12.47749),tensor(-0.98135),tensor(-6.28833),"tensor(12.51602, dtype=torch.float64)"
tensor(17.88447),tensor(-0.53819),tensor(-6.10206),"tensor(17.89256, dtype=torch.float64)"
tensor(18.77924),tensor(-0.93661),tensor(-6.08396),"tensor(18.80259, dtype=torch.float64)"
tensor(16.63126),tensor(-0.41045),tensor(-6.12702),"tensor(16.63632, dtype=torch.float64)"
tensor(15.61701),tensor(0.27790),tensor(-6.09903),"tensor(15.61948, dtype=torch.float64)"
tensor(14.05750),tensor(1.16605),tensor(-6.10179),"tensor(14.10577, dtype=torch.float64)"
tensor(13.17542),tensor(1.06589),tensor(-6.11271),"tensor(13.21846, dtype=torch.float64)"
tensor(13.41647),tensor(1.06223),tensor(-6.10808),"tensor(13.45846, dtype=torch.float64)"
tensor(11.36802),tensor(2.09599),tensor(-6.13707),"tensor(11.55963, dtype=torch.float64)"
tensor(13.60220),tensor(0.71400),tensor(-6.06595),"tensor(13.62093, dtype=torch.float64)"
tensor(14.17918),tensor(0.46914),tensor(-6.05345),"tensor(14.18694, dtype=torch.float64)"
tensor(14.17918),tensor(0.46914),tensor(-6.05345),"tensor(14.18694, dtype=torch.float64)"
tensor(13.72026),tensor(1.19933),tensor(-6.06127),"tensor(13.77258, dtype=torch.float64)"
tensor(14.05618),tensor(0.86511),tensor(-6.04764),"tensor(14.08278, dtype=torch.float64)"
tensor(13.83801),tensor(1.22303),tensor(-6.05375),"tensor(13.89195, dtype=torch.float64)"
tensor(10.97681),tensor(1.69244),tensor(-6.12161),"tensor(11.10652, dtype=torch.float64)"
tensor(11.07959),tensor(1.42885),tensor(-6.10499),"tensor(11.17134, dtype=torch.float64)"
tensor(10.85641),tensor(1.65414),tensor(-6.11148),"tensor(10.98171, dtype=torch.float64)"
tensor(10.88860),tensor(1.79729),tensor(-6.11191),"tensor(11.03593, dtype=torch.float64)"
tensor(12.67493),tensor(0.72789),tensor(-6.03377),"tensor(12.69581, dtype=torch.float64)"
tensor(7.99182),tensor(21.34116),tensor(-0.27965),"tensor(22.78847, dtype=torch.float64)"
tensor(6.94142),tensor(17.62612),tensor(-0.15319),"tensor(18.94369, dtype=torch.float64)"
tensor(7.35711),tensor(18.95295),tensor(-0.16050),"tensor(20.33080, dtype=torch.float64)"
tensor(11.39215),tensor(13.15997),tensor(-0.50042),"tensor(17.40591, dtype=torch.float64)"
tensor(-7.41935),tensor(-5.18011),tensor(0.26557),"tensor(9.04877, dtype=torch.float64)"
tensor(-2.80145),tensor(-4.31392),tensor(0.19005),"tensor(5.14373, dtype=torch.float64)"
tensor(-5.20952),tensor(-5.17281),tensor(0.20833),"tensor(7.34146, dtype=torch.float64)"
tensor(5.40843),tensor(16.22190),tensor(-0.22991),"tensor(17.09974, dtype=torch.float64)"
tensor(-0.99172),tensor(-3.74402),tensor(0.10221),"tensor(3.87314, dtype=torch.float64)"
tensor(5.68504),tensor(18.14246),tensor(-0.31833),"tensor(19.01232, dtype=torch.float64)"
tensor(5.50359),tensor(19.45763),tensor(-0.42692),"tensor(20.22100, dtype=torch.float64)"
tensor(5.14074),tensor(16.40418),tensor(-0.36598),"tensor(17.19082, dtype=torch.float64)"
tensor(4.98164),tensor(16.31363),tensor(-0.36386),"tensor(17.05729, dtype=torch.float64)"
tensor(4.79053),tensor(15.78249),tensor(-0.35177),"tensor(16.49351, dtype=torch.float64)"
tensor(3.77734),tensor(13.21631),tensor(-0.24733),"tensor(13.74551, dtype=torch.float64)"
tensor(5.05099),tensor(16.33645),tensor(-0.32734),"tensor(17.09947, dtype=torch.float64)"
tensor(5.34944),tensor(18.33043),tensor(-0.38580),"tensor(19.09506, dtype=torch.float64)"
tensor(4.81244),tensor(17.62007),tensor(-0.38666),"tensor(18.26545, dtype=torch.float64)"
tensor(4.46383),tensor(12.29969),tensor(-0.28495),"tensor(13.08465, dtype=torch.float64)"
tensor(4.45963),tensor(13.99586),tensor(-0.33552),"tensor(14.68920, dtype=torch.float64)"
tensor(4.79234),tensor(17.51486),tensor(-0.41550),"tensor(18.15866, dtype=torch.float64)"
tensor(3.81383),tensor(11.41817),tensor(-0.28814),"tensor(12.03826, dtype=torch.float64)"
tensor(4.27296),tensor(11.34026),tensor(-0.29887),"tensor(12.11857, dtype=torch.float64)"
tensor(3.43572),tensor(7.62584),tensor(-0.20584),"tensor(8.36407, dtype=torch.float64)"
tensor(2.77327),tensor(7.58950),tensor(-0.20605),"tensor(8.08032, dtype=torch.float64)"
tensor(2.97694),tensor(7.93285),tensor(-0.21590),"tensor(8.47303, dtype=torch.float64)"
tensor(3.02380),tensor(8.99137),tensor(-0.24322),"tensor(9.48621, dtype=torch.float64)"
tensor(2.87246),tensor(8.28960),tensor(-0.22401),"tensor(8.77317, dtype=torch.float64)"
tensor(8.98178),tensor(2.12190),tensor(-0.04212),"tensor(9.22902, dtype=torch.float64)"
9.541991171493137,2.8847204581713584,-0.047020640244133105,9.968510803457322
tensor(12.55493),tensor(5.79554),tensor(-0.14382),"tensor(13.82804, dtype=torch.float64)"
9.637366599140577,2.9215170891292246,-0.047020640244133105,10.07045664646368
10.575863159472178,3.6253124994420602,-0.047020640244133105,11.17997192690982
9.889560194580412,2.2797856561923595,-0.09668840300001658,10.148932134979018
9.677932056129663,1.7282491613328546,-0.1010877941564352,9.831033213590006
9.85325237420831,2.0608779117443135,-0.1010877941564352,10.066469098793146
tensor(8.66979),tensor(-2.00943),tensor(-0.06916),"tensor(8.89961, dtype=torch.float64)"
tensor(5.99863),tensor(0.24429),tensor(-0.09430),"tensor(6.00361, dtype=torch.float64)"
tensor(5.84130),tensor(0.51068),tensor(-0.09281),"tensor(5.86358, dtype=torch.float64)"
tensor(6.96018),tensor(-0.28526),tensor(-0.11502),"tensor(6.96603, dtype=torch.float64)"
tensor(5.61117),tensor(0.49924),tensor(-0.08909),"tensor(5.63333, dtype=torch.float64)"
tensor(5.76524),tensor(0.23199),tensor(-0.09053),"tensor(5.76990, dtype=torch.float64)"
tensor(6.35162),tensor(0.05891),tensor(-0.04242),"tensor(6.35190, dtype=torch.float64)"
tensor(4.94494),tensor(0.20609),tensor(-0.03476),"tensor(4.94923, dtype=torch.float64)"
tensor(3.84344),tensor(-1.02276),tensor(-0.01865),"tensor(3.97719, dtype=torch.float64)"
tensor(5.02423),tensor(-0.47358),tensor(-0.04253),"tensor(5.04650, dtype=torch.float64)"
tensor(7.15960),tensor(-0.79915),tensor(-0.09535),"tensor(7.20406, dtype=torch.float64)"
tensor(6.01412),tensor(-0.45175),tensor(-0.06530),"tensor(6.03106, dtype=torch.float64)"
tensor(5.84370),tensor(-0.47451),tensor(-0.06213),"tensor(5.86293, dtype=torch.float64)"
tensor(5.89956),tensor(-0.30202),tensor(-0.06226),"tensor(5.90728, dtype=torch.float64)"
tensor(5.35995),tensor(-1.17236),tensor(-0.17214),"tensor(5.48667, dtype=torch.float64)"
tensor(5.56776),tensor(-1.03214),tensor(-0.08515),"tensor(5.66262, dtype=torch.float64)"
tensor(5.74724),tensor(-1.09939),tensor(-0.08791),"tensor(5.85144, dtype=torch.float64)"
tensor(5.57288),tensor(-1.13280),tensor(-0.08471),"tensor(5.68684, dtype=torch.float64)"
tensor(5.09846),tensor(-0.92935),tensor(-0.07550),"tensor(5.18247, dtype=torch.float64)"
tensor(5.29607),tensor(-1.00165),tensor(-0.07728),"tensor(5.38996, dtype=torch.float64)"
tensor(4.58092),tensor(-0.87804),tensor(-0.06627),"tensor(4.66431, dtype=torch.float64)"
tensor(3.85728),tensor(-0.63195),tensor(-0.05161),"tensor(3.90871, dtype=torch.float64)"
tensor(5.54415),tensor(-0.98859),tensor(-0.08930),"tensor(5.63160, dtype=torch.float64)"
tensor(5.83988),tensor(-1.05222),tensor(-0.09725),"tensor(5.93392, dtype=torch.float64)"
tensor(6.19772),tensor(-0.89993),tensor(-0.10506),"tensor(6.26271, dtype=torch.float64)"
tensor(6.17399),tensor(-1.18472),tensor(-0.10447),"tensor(6.28663, dtype=torch.float64)"
tensor(2.59775),tensor(-0.66165),tensor(-0.09982),"tensor(2.68069, dtype=torch.float64)"
tensor(1.69984),tensor(-1.17953),tensor(-0.09742),"tensor(2.06900, dtype=torch.float64)"
tensor(1.87132),tensor(-1.16537),tensor(-0.09946),"tensor(2.20452, dtype=torch.float64)"
tensor(1.87476),tensor(-1.07891),tensor(-0.10348),"tensor(2.16305, dtype=torch.float64)"
tensor(1.49504),tensor(-1.38387),tensor(-0.08756),"tensor(2.03722, dtype=torch.float64)"
tensor(1.76000),tensor(-1.12990),tensor(-0.09629),"tensor(2.09148, dtype=torch.float64)"
tensor(1.32104),tensor(-1.40905),tensor(-0.08097),"tensor(1.93147, dtype=torch.float64)"
tensor(3.38338),tensor(-0.09088),tensor(-0.11975),"tensor(3.38460, dtype=torch.float64)"
tensor(2.58845),tensor(-2.39627),tensor(-0.05063),"tensor(3.52735, dtype=torch.float64)"
tensor(1.38306),tensor(-2.29091),tensor(-0.00085),"tensor(2.67602, dtype=torch.float64)"
tensor(-0.82314),tensor(-3.50336),tensor(0.06633),"tensor(3.59876, dtype=torch.float64)"
tensor(-1.46038),tensor(-4.27269),tensor(0.09387),"tensor(4.51537, dtype=torch.float64)"
tensor(-1.60692),tensor(-4.59637),tensor(0.09568),"tensor(4.86917, dtype=torch.float64)"
tensor(0.48421),tensor(-2.65990),tensor(0.03374),"tensor(2.70362, dtype=torch.float64)"
tensor(0.70074),tensor(-2.96807),tensor(0.03591),"tensor(3.04967, dtype=torch.float64)"
tensor(-0.13515),tensor(-2.43787),tensor(0.05076),"tensor(2.44161, dtype=torch.float64)"
tensor(-2.78687),tensor(-3.65785),tensor(0.10872),"tensor(4.59854, dtype=torch.float64)"
tensor(-1.08416),tensor(-3.36063),tensor(0.06744),"tensor(3.53118, dtype=torch.float64)"
tensor(0.19331),tensor(-3.56416),tensor(0.04099),"tensor(3.56939, dtype=torch.float64)"
tensor(-0.57478),tensor(-3.73840),tensor(0.05746),"tensor(3.78233, dtype=torch.float64)"
tensor(0.40755),tensor(-4.01447),tensor(0.04726),"tensor(4.03511, dtype=torch.float64)"
tensor(2.46928),tensor(-2.59206),tensor(0.00513),"tensor(3.57997, dtype=torch.float64)"
tensor(2.87027),tensor(-2.54153),tensor(-0.00184),"tensor(3.83377, dtype=torch.float64)"
tensor(0.92720),tensor(-3.22116),tensor(0.03224),"tensor(3.35195, dtype=torch.float64)"
tensor(2.79688),tensor(-2.99003),tensor(-0.00070),"tensor(4.09424, dtype=torch.float64)"
tensor(2.71394),tensor(-2.52063),tensor(-0.00113),"tensor(3.70392, dtype=torch.float64)"
tensor(-0.50806),tensor(-4.11645),tensor(0.05282),"tensor(4.14768, dtype=torch.float64)"
tensor(3.60602),tensor(-1.47879),tensor(-0.03296),"tensor(3.89746, dtype=torch.float64)"
tensor(3.10984),tensor(-2.85454),tensor(-0.01291),"tensor(4.22131, dtype=torch.float64)"
tensor(4.08464),tensor(-2.49809),tensor(-0.02915),"tensor(4.78798, dtype=torch.float64)"
tensor(4.54400),tensor(-2.09533),tensor(-0.03958),"tensor(5.00383, dtype=torch.float64)"
tensor(5.08800),tensor(-1.87402),tensor(-0.04793),"tensor(5.42214, dtype=torch.float64)"
tensor(4.54400),tensor(-2.09533),tensor(-0.03958),"tensor(5.00383, dtype=torch.float64)"
tensor(4.54400),tensor(-2.09533),tensor(-0.03958),"tensor(5.00383, dtype=torch.float64)"
tensor(4.54400),tensor(-2.09533),tensor(-0.03958),"tensor(5.00383, dtype=torch.float64)"
