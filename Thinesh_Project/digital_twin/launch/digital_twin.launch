<launch>
   <include file="$(find robotino_node)/launch/robotino_node.launch">
    <arg name="hostname" value="129.69.102.241"/>
    <!-- more default parameters can be changed here -->
  </include>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find digital_twin)/worlds/default.world"/>
    <!-- more default parameters can be changed here -->
  </include>
  
  <param name="robot_description" textfile="$(find robotino_description)/robotino.urdf" />
  <!--param name="/use_sim_time" value="true"/-->
<!--
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="20.0" />
  </node>
  <node pkg="tf" type="static_transform_publisher" name="laser_camera_broadcaster" args="0.0 0 0.0 0 0 0 laser_link camera_depth_frame 50" />
  <node pkg="tf" type="static_transform_publisher" name="laser_link_broadcaster" args="0 0 0.23 0 0 0 base_link laser_link 50" />
  -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_camera_broadcaster" args="0.0125 -0.11627 0 0 0 0 1 robotino/base_link robotino/camera" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0.0125 -0.0545 0 0 0 0 1 robotino/base_link robotino/scan"/>
  <node pkg="digital_twin" type="tf2_broadcaster_base" name="tf2_broadcaster_base2" required="true"/>


<!--
  <param name="/use_sim_time" value="true"/>
-->
  <arg name="map_file" default="$(find digital_twin)/map/cropped15.yaml"/>

  <node pkg="map_server" type="map_server" args="$(arg map_file)" respawn="true" name="map1" />


  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="/scan"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="odom_model_type" value="omni-corrected"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="update_min_d" value="0.01"/>    <!--1cm  change-->
    <param name="update_min_a" value="0.1"/>  <!--2.865 degree change-->
 </node>


  <node name="my_wall_spwan" pkg="digital_twin" type="node_pcg_gazebo_spwan_wall.py" output="screen"/>
  <!--node name="my_div" pkg="digital_twin" type="listener.py" output="screen"/-->

  <node name="my_obj_spwan" pkg="digital_twin" type="node_pcg_gazebo_spwan_objects.py" output="screen"/>
  <node name="my_odom" pkg="digital_twin" type="odom.py" output="screen"/>
  <!--node name="my_set_pose" pkg="digital_twin" type="set_pose_robotl.py" output="screen">
    <rosparam file="$(find digital_twin)/map/cropped15.yaml" command="load" />
  </node-->

</launch>
