<?xml version="1.0" ?>
<sdf version="1.7">
  <model name="robotino3">
    <static>false</static>
    <link name="body">
      <pose>0 0 0.001 0 0 0</pose>
      <gravity>true</gravity>
      <inertial>
        <mass>30</mass>
        <pose>0 0 0.075 0 0 0</pose>
        <inertia>
          <!-- according to http://en.wikipedia.org/wiki/List_of_moments_of_inertia for a solid cylinder of radius r=0.225, height h=0.15, mass m=30 -->
          <ixx>0.4359375</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.4359375</iyy>
          <iyz>0.0</iyz>
          <izz>0.759375</izz>
        </inertia>
      </inertial>
      <visual name="body-visual">
        <pose>0.01 0 0.00 0 0 1.570795</pose>
        <geometry>
          <mesh>
            <uri>model://robotino3/meshes/robotino3.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
        <cast_shadows>false</cast_shadows>
      </visual>
      <collision name="body-collision">
        <pose>0 0 0.035 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.07</length>
            <radius>0.225</radius>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>0.2</mu>
              <mu2>0.2</mu2>
              <slip1>0.8</slip1>
              <slip2>0.8</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <collision name="body-collision-computer">
        <pose>2.869 -1.87 0.19 0 0 1.95</pose>
        <geometry>
          <mesh>
            <uri>model://robotino3/meshes/robotino-3-computer.dae</uri>
          </mesh>
        </geometry>
      </collision>
      <!--<collision name="chassis-collision-for-laser">
        <pose>-0.05 0 0.17 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.08</length>
            <radius>0.12</radius>
          </cylinder>
        </geometry>
      </collision>-->
      <collision name="tower">
        <pose>0.00 0.00 0.43 0 0 0</pose>
        <geometry>
          <box>
            <size>0.09 0.09 0.70</size>
          </box>
        </geometry>
      </collision>
      <collision name="tower_plate">
        <pose>0 0 0.79 0 0 0</pose>
        <geometry>
          <cylinder>
            <length>0.02</length>
            <radius>0.225</radius>
          </cylinder>
        </geometry>
      </collision>
      <visual name='wheel0-visual'>
        <pose>-0.12 0 0.04 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	          <scale>0.01 0.01 0.01</scale>
	        </mesh>
        </geometry>
      </visual>
      <visual name='wheel1-visual'>
        <pose>0.06 -0.104 0.045 0 0 -1.047</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	          <scale>0.01 0.01 0.01</scale>
	        </mesh>
        </geometry>
      </visual>
      <visual name='wheel2-visual'>
        <pose>0.06 0.104 0.045 0 0 1.047</pose>
        <geometry>
          <mesh>
            <uri>model://robotino/meshes/RobotinoWheel.dae</uri>
	          <scale>0.01 0.01 0.01</scale>
	        </mesh>
        </geometry>
      </visual>
    </link>

    <model name='hokuyo'>
      <pose>0.0125 -0.0545 0.335915 0 0 -1.570796</pose>
      <link name='link'>
        <inertial>
          <mass>1.2</mass>
        </inertial>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://hokuyo/meshes/hokuyo.dae</uri>
            </mesh>
          </geometry>
        </visual>
        <collision name='collision-base'>
          <pose>0 0 -0.0145 0 -0 0</pose>
          <geometry>
            <box>
              <size>0.05 0.05 0.041</size>
            </box>
          </geometry>
        </collision>
        <collision name='collision-top'>
          <pose>0 0 0.0205 0 -0 0</pose>
          <geometry>
            <cylinder>
              <radius>0.021</radius>
              <length>0.029</length>
            </cylinder>
          </geometry>
        </collision>
        <sensor name='laser' type='ray'>
          <pose>0.01 0 0.0175 0 -0 0</pose>
          <ray>
            <scan>
              <horizontal>
                <samples>540</samples>
                <resolution>1</resolution>
                <min_angle>-2.3562</min_angle>
                <max_angle>2.3562</max_angle>
              </horizontal>
            </scan>
            <range>
              <min>0.1</min>
              <max>30</max>
              <resolution>0.03</resolution>
            </range>
          </ray>
          <!--plugin name='laser' filename='libRayPlugin.so'/-->
          <always_on>1</always_on>
          <update_rate>30</update_rate>
          <visualize>0</visualize>
          <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
            <topicName>/robotino/scan</topicName>
            <frameName>/robotino/scan</frameName>
          </plugin>
        </sensor>
      </link>
    </model>

    <model name='intel_realsense_r200'>
      <pose>0.0125 -0.11627 0.297 0 0 -1.570796</pose>
      <link name='link'>
        <inertial>
          <mass>0.2</mass>
          <inertia>
            <ixx>0.00014395</ixx>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyy>3.84e-06</iyy>
            <iyz>0</iyz>
            <izz>0.00014136</izz>
          </inertia>
        </inertial>
        <collision name='collision'>
          <geometry>
            <box>
              <size>0.008 0.13 0.02</size>
            </box>
          </geometry>
          <surface>
            <contact>
              <ode>
                <max_vel>0.1</max_vel>
                <min_depth>0.001</min_depth>
              </ode>
            </contact>
            <friction>
              <ode>
                <mu>0.4</mu>
                <mu2>0.4</mu2>
              </ode>
            </friction>
          </surface>
        </collision>
        <visual name='visual'>
          <geometry>
            <mesh>
              <uri>model://intel_realsense_r200/meshes/realsense_r200.dae</uri>
            </mesh>
          </geometry>
        </visual>
        <sensor name='camera' type='depth'>
          <pose>0.001 -0.045 0.003 0 -0 0</pose>
          <update_rate>60</update_rate>
          <camera>
            <horizontal_fov>0.976899</horizontal_fov>
            <image>
              <width>640</width>
              <height>480</height>
              <format>R8G8B8</format>
            </image>
            <clip>
              <near>0.105</near>
              <far>10</far>
            </clip>
          </camera>
          <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
            <baseline>0.2</baseline>
            <alwaysOn>true</alwaysOn>
            <!-- Keep this zero, update_rate in the parent <sensor> tag will control the frame rate. -->
            <updateRate>0.0</updateRate>
            <cameraName>camera_ir</cameraName>
            <imageTopicName>/camera/color/image_raw</imageTopicName>
            <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
            <frameName>robotino/camera</frameName>            
            <pointCloudCutoff>0.105</pointCloudCutoff>
            <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
            <distortionK1>0</distortionK1>
            <distortionK2>0</distortionK2>
            <distortionK3>0</distortionK3>
            <distortionT1>0</distortionT1>
            <distortionT2>0</distortionT2>
            <CxPrime>0</CxPrime>
            <Cx>0</Cx>
            <Cy>0</Cy>
            <focalLength>0</focalLength>
            <hackBaseline>0</hackBaseline>
          </plugin>
        </sensor>
      </link>
    </model>

    <joint name='body_JOINT_0' type='revolute'>
      <parent>robotino3::body</parent>
      <child>intel_realsense_r200::link</child>
      <pose>0 0 0 0 -0 0</pose>
      <axis>
        <xyz>1 0 0</xyz>
        <limit>
          <lower>0</lower>
          <upper>0</upper>
          <effort>-1</effort>
          <velocity>-1</velocity>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
          <damping>0</damping>
        </dynamics>
      </axis>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>
    <joint name='body_JOINT_1' type='fixed'>
      <parent>robotino3::body</parent>
      <child>hokuyo::link</child>
      <pose>0 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <!--plugin name="ModelVelocity" filename="libModelVelocity.so"/-->
    <!--plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so" libgazebo_ros_force_based_move #libgazebo_ros_planar_move.so"-->
    <plugin name="gazebo_ros_planar_move" filename="libModelVelocity.so">
      <commandTopic>cmd_vel_RL</commandTopic>
      <alwaysOn>true</alwaysOn>
      <updateRate>30</updateRate>
      <bodyName>body</bodyName>
      <topicName>robotino/odom</topicName>
      <gaussianNoise>0.01</gaussianNoise>
      <xyzOffsets>0 0 0</xyzOffsets>
      <rpyOffsets>0 0 0</rpyOffsets>
      <odometryTopic>robotino/odom</odometryTopic>
      <odometryFrame>robotino/odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>robotino/base</robotBaseFrame>
    </plugin>



  </model>
</sdf>
